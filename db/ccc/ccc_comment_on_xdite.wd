# 先用肌肉學習，別急著用大腦！

看到 xdite 分享的 [這則貼文](https://www.facebook.com/xdite/posts/10153782351298552?fref=nf) ，忍不住要記下來。

```
好，我開始講原理。人很犯賤，做事情他都要問 Why，否則他不想做。然後知道 Why 後，他就會想 What to do 。
幹，這就是最慘的地方。初學東西絕對不要用大腦，要用肌肉，要用肌肉，要用肌肉。
如果你一開始用大腦學，你就慘了。這是一個大陷阱，也是很多人學東西學不起來的原因。
你的肌肉有記憶，只要重複，就會有記憶。你只要一件事情，練五次，他就會有記憶。所以不要問「為什麼」，先做就對了。也不要「想一般做一邊想改成自己要的」。
也就是絕對不能讓「大腦」介入學習你的訓練過程。
也就是絕對不能讓「大腦」介入學習你的訓練過程。
也就是絕對不能讓「大腦」介入學習你的訓練過程。
一旦你有這個念頭，你的大腦就會掉入一個無窮迴圈。
"Why" -> "What" -> "Why" -> "What" -> "Why" -> "What" -> "Why" -> "What"
問題是你完全不懂這門知識，你的大腦就會當機，而且擺脫不了這個迴圈。
不熟悉 What 操作方式，大腦就會慌張，就會問 Why。這時候就毀了。
有些人方法是去背熟 Rule Book，試圖掌握規則。
幹，這就更慘了，因為 1) Rule Book 讓人想睡，學習效率會超低 2) 就算你掌握 Rule book，新手根本無法根據 Rule Book 展開世界觀，因為世界不是 Rule Book 建構的，Rule Book 只是世界的一個「削減到最小，接近邏輯的規則」，但他們不是基礎的「邏輯」。
為什麼台灣人學語文 fail 呢？因為台灣學語文是由 Rule book 開始，所以一堆人八百年學不會。
其實世界上各領域都是這樣的，都是勉強會用，「文法標準」，只能證明你「有教養」「可能是 native」「高等教育」，卻不會說文法不標準，人家「完全聽不懂」。
比如說寫程式也是這樣，你照別人 example 做，一開始會動，但是效率不好，coding style 超噁心。然後你再慢慢學慢慢修，變成漂亮的程式。但人家不會說「你沒照正確 best pratices 寫」，這個功能就不會動。
幹，如果新手一開始花超多時間學語法，而且去找語言 best practices 寫，而且試圖去背 rule book，試圖了解他。讀完整本 design pattern 再學寫 code，幹，包準他什麼鬼都寫不出來。因為他會鬼打牆在 「我不要犯錯」，「怎麼一直保持完美」，「why,why,why」。
好。寫到這裡，你會發現開始有感覺了。好像學的起來的技能，都是這樣學起來的。而且我跟你講一件更可怕的 fact，這些學的起來的東西，你學的時候，要是是傻傻初學者狀態最好。
要是你已有類似領域學習經驗。完蛋了。會學超慢。為什麼呢？
因為第一直覺，你一定是會想要 what，把新東西方法 map 到你的舊技能去，然後你發現不 work，然後你開始問 why。
what -> why 迴圈要開始了。
我舉兩個例子。
當初我們最早一輩人，有 svn 經驗的人學 git 時，學超久。結果不知道什麼是 git 的人，學 git 超快。
因為我們會一直試圖把 svn map 到 git，然後找規則，幹，然後找不到規則。我認識一堆大神剛學 git ，都學得比現在新手慢超多......
然後現在新手學超快，是因為 git 現在有教學 example，照著打就好。不然你真的照 git rule book 來。媽的我跟你說 git command 真是超 nonsense 的。這點還被程式界拿出來恥笑。
學人類新語言還特別嚴重，因為這是一個領域，人人都有一門精熟的技能，但是絕大多數人不知道規則是怎樣的技能。
所以學語言時，下意識你會驚慌，一直想用what 去remap，然後去問 why。於是大腦就卡住鬼打牆了。
That's why。
```

很有趣的想法，做就對了 .....

那些已經會物件導向的人很難學會 javascript 的原型鏈，好像也是這樣！

王語嫣學不會武功，就是因為只有理論，沒有用肌肉 .....

這讓我想起自己先前寫的一篇文章！

* [一直背一直背一直背，最後你就會變成王語嫣](https://www.facebook.com/notes/%E9%99%B3%E9%8D%BE%E8%AA%A0/%E4%B8%80%E7%9B%B4%E8%83%8C%E4%B8%80%E7%9B%B4%E8%83%8C%E4%B8%80%E7%9B%B4%E8%83%8C%E6%9C%80%E5%BE%8C%E4%BD%A0%E5%B0%B1%E6%9C%83%E8%AE%8A%E6%88%90%E7%8E%8B%E8%AA%9E%E5%AB%A3/10153095238261893)

還有王建興的這篇：

* [老鳥反而飛得慢？](http://www.ithome.com.tw/voice/86452)


有些人說這是胡扯！

別走極端了， xdite 沒說不要問 why 阿，也沒說不要用理論啊！

只是在開始的時候一直問 why，那就學不下去了啊！

很多東西做了之後就有感覺，這時候再慢慢引入理論，就會有很好的效果啊！

By the way, xdite 學過速讀，據他說速讀的關鍵是：

當你閱讀時，通常會從眼睛吸收後，進入腦袋再用默唸的方式念出來，接著再倒回腦袋吸收進去。

速讀省掉了默唸後在吸收的動作，直接眼睛吸收進入腦袋就完成了！

這種方法讓你可以快上十倍！

## 後記

後來我看到 xdite 分享了這個文章和影片，

```
Albert Yang 剛剛分享給我這個騎相反原理腳踏車的實驗
https://www.youtube.com/watch?v=MFzDaBzBlL0
『Xdite 講的就是慣性
一個人剛出生的神經與神經突觸不是做多的
而是在 18 個月大時達到巔峰，之後開始「減少」
18 個月大時就像是一個雜枝很多的雨林
剛開始可能有數百條羊腸小徑
之後常走的道路就會慢慢擴大，成為道路
其他少用的小路就漸漸消失（例如說講英文的潛力）
用網路來比喻，就是那些常用的神經路徑變成了光纖
少用的還是撥接
這大概是行為慣性背後的原理
要突破他，照小孩學事情的方式就可以了
他們是天生的學習者，可能比開外掛的 Xdite 還誇張（成長的速度）』
```

<iframe width="560" height="315" src="https://www.youtube.com/embed/MFzDaBzBlL0" frameborder="0" allowfullscreen></iframe>

然後又看到 xdite 發了這個

* <https://www.facebook.com/xdite/posts/10153782596498552>

接著又看到 [這篇](https://www.facebook.com/xdite/posts/10153782321788552)

```
好。文章照例有點長，我先講結論方法。假設你初入門，要去學一門技術。
1. [How] 去找專家的「實作方法」課，「實作方法」書。快速的跟著他做。（請先一模一樣的做，不要自作聰明改，也不要去問「為甚麼」。幹，叫你不要問就不要問。）
2. [What] 接著把「成果」做一點小修改。看看會不會動。
3. [Why] 改東西會動了以後，才去查 Why。
好，五天都重複這樣的循環，你就會了，至少能掌握這門學問 60 分，我保證。
就這麼簡單，我保證。
前提是，幹，在前三個小時，按捺住你的好奇心，別問 Why 與 What。否則你學五個月都學不起來。
--- 原理我看心情再繼續寫下去
```

後來又看到 [我的學習路徑](http://smalltalk.xdite.net/posts/298231-my-learning-path) 。

接著又看到 [把一門學問「學好」的紥實方式](http://smalltalk.xdite.net/posts/313535-science-in-a-learning-method-of-solid) ，當中強調 60%=>90% 就是從 what => why 的過程。

很有意思！

