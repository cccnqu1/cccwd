# 程式設計的第一門課 -- 簡介

## 入門學習資源

小學生都學得會，你一定可以

* <http://code.org/learn>
* <http://studio.code.org/hoc/1>
* <http://studio.code.org/>
* <http://studio.code.org/flappy/1>

## 入門書

* [矢澤久雄: if與else的思考術：程式設計邏輯腦的養成講座](http://www.books.com.tw/products/0010445551)

## 後記

對於我發的 [這個文](https://www.facebook.com/groups/programmerMagazine/permalink/1073920862624629/) 和 [那個文](https://www.facebook.com/ccckmit/posts/10153170376986893) ，正反兩方的意見都有，非常感謝！

不過一個老師採用的教法，其實是要適合老師本身的特性的，適合 A 老師的不見得適合 B 老師，適合 甲班的不見得適合乙班。

在這門課上我打算用翻轉是教學法，除了教學生一些基本操作和分享應用領域之外，大部分的時間都是自學，然後老師出題目給學生想和做。

我發現這樣的作法比較適合我，主要是因為當我單向講課時，學生其實大部分都打電動上網去了，真正有在聽的大約只有五分之一。

與其這樣，還不如用翻轉的方式，而且讓學生自己感受語言的特性之後，從中挑一種學習。

當然、對於那些沒有特別偏好的同學，我會推薦他們從 JavaScript 開始。

這門課分上下學期，上學期我會推薦 JavaScript，下學期我會推薦 C 。

應該大部分的學生都會以這個推薦順序學習才對，所以應該不會一下就要學五種語言，只是會一次就看到五種語言的應用，再來作決定就是了。

翻轉教學法我覺得還蠻適合用在程式設計課上面的，因為程式就是要去寫才會有感覺，但是回家會真的花時間努力寫的學生不多，所以乾脆讓他們在上課邊想邊寫，這樣老師也可以有很多時間去解答他們的問題。

有興趣的同學，回去再進一步更深入的學習，有幾門課我這樣做的結果，感覺不會比講課差。

至於很多人擔心大一是個適應期，一下就用這種方法，會造成學生不適應然後放棄。

其實、就我的經驗，在單向教學方式下放棄的學生比用翻轉教學法更多。

我認為大一是學習程式的黃金時光，對於那些輕易就放棄的同學，我想對他們說，堅持下去，找出適合你的學習法。

否則要一輩子和程式打交道，還不如提早放棄比較好！