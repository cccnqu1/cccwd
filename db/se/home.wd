# 軟體工程實戰 - 以 JavaScript 為例

| 主題 | 說明 |
|--------|--------|
| [[簡介]](basic)  | 螺旋/瀑布，教堂/市集, .... |
| [[系統分析]](analysis)  | User Story,  |
| [[系統開發]](coding)  | node.js, browser, IDE:JetBrains WebStorm, ... |
| [[除錯工具]](debug)  | [[node-inspector]] , node debug,   ..., 壞語法檢查: JSLint, use strict |
| [[單元測試]](unit)  | TDD:mocha, BDD: [[Jasmine]], Protractor, ASSERT:Chai, ... |
| [[版本管理]](version)  | git, npm, nvm, ... |
| [[專案管理]](project)  | Redmine, Trac, ... |
| [[效能分析]](profile)  | DTrace (Runtime), node-profiler, ... |
| [[系統整合]](integration)  | CI, Jenkins, Travis, Strider , Web UI Testing : Selenium, 自動測試：Karma, ... |
| [[上線營運]](online)  | forever, heroku, .... |
| [[品質管理]](quality)  | SourceMonitor(程式碼掃瞄), .... |
| [[產品驗收]](acceptance)  | Fit: Framework for Integrated Test, fitnesse:acceptance testing framework .... |
| [[規模擴充]](scale) | 反向代理, 負載平衡，快取加速，平行服務   |
| [[案例研究]](case) |    |
| [[方法：TDD]](tdd) | 測試驅動開發法 -- TDD, ATDD, BDD   |
| [[方法：Scrum]](scrum) | 軟體開發方法 -- 敏捷專案開發 |
| [[結語]](end)  | 影響因子：軟體大小，人數多寡，技術與管理能力 |

